## load libraries
library(R.utils)
## load optimal vcmax script (Smith et al., Ecology Letters)
sourceDirectory('optimal_vcmax_R/functions')
source('optimal_vcmax_R/calc_optimal_vcmax_nutnet.R')
## load observational data
traits = read.csv('../Data/leaf_plus.csv')
head(traits)
## calculate lma (in g m-2) and narea
traits$lma = 1 / (traits$SLA * (1 / 1000000)) # conver mm2 g-1 to g m-2
traits$narea = (traits$leaf_pct_N / 100) * (traits$lma)
hist(traits$lma) # some extremely high values
hist(traits$narea) # some extremely high values
## remove C4 and values without d13c
traits_sub = subset(traits, lma < 100000 & photosynthetic_pathway == 'C3' & leaf_C13_delta_PDB != 'NA'
& leaf_C13_delta_PDB < -20)
## calculate optimal trait values
traits_photo = calc_optimal_vcmax(tg_c = traits_sub$tmp, paro = traits_sub$par, cao = 400,
vpdo = traits_sub$vpd, z = traits_sub$z, dleaf = traits_sub$leaf_C13_delta_PDB)
traits_sub$vcmax_mod = as.numeric(as.character(traits_photo$vcmax_prime))
traits_sub$vcmax25_mod = traits_sub$vcmax_mod / calc_tresp_mult(traits_sub$tmp, traits_sub$tmp, 25)
traits_sub$vcmax25_mod[traits_sub$vcmax25_mod < 0] <- NA
traits_sub$vcmax25_mod
60 * (1/3.5) * (1/8)
60 * (1/3.5) * (1/8) * 550000 * 11400 * 14
traits_sub$n_structure_mod
traits_sub$n_structure_mod = (10^-2.67) * (traits_sub$lma ^ 0.99)
traits_sub$n_structure_mod
60 * (1/3.5) * (1/8) * 0.55 * 11.4 * 14
60 * (1/3500000) * (1/8) * 550000 * .0114 * 14
### from Ning Dong: Nrubisco (g per m2) = ((vcmax25 * Mr * nr) / (kcat * Nr)) * Mn
### vcmax25 = vcmax at 25C (umol m-2 s-1)
### Nr = number of catalytic sites per mole of Rubisco = 8 mol Rubisco site per mol Rubisco
### kcat = catalytic turnover at 25C = 3.5 CO2 per mol Rubisco site per second
### Mr = molecular mass of Rubisco = 0.55 g Rubisco per umol Rubisco (550000 g Rubisco per mol Rubisco)
### nr = N concentration of Rubisco = 11400 mol N per g Rubisco
### Mn = molecular mass of N = 14 gN per mol N
### specific activity of rubisco is 60 umol CO2 gRubisco-1 s-1
### mass ratio of rubisco is 7.16 gRubisco gNRubisco-1
### lma conversion from Dong et al. (2017) Biogeosciences
traits_sub$n_rubisco_mod = traits_sub$vcmax25_mod * (1/3500000) * (1/8) * 550000 * .0114 * 14
traits_sub$n_structure_mod = (10^-2.67) * (traits_sub$lma ^ 0.99)
hist(traits_sub$n_rubisco_mod)
hist(traits_sub$n_structure_mod)
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lmer(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod) + (1|site_code), data = traits_sub)
Anova(n_pred_lmer)
summary(n_pred_lmer)
plot(resid(n_pred_lmer) ~ fitted(n_pred_lmer))
library(lme4)
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lm = lm(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod), data = traits_sub)
Anova(n_pred_lm)
summary(n_pred_lm)
plot(resid(n_pred_lmer) ~ fitted(n_pred_lmer))
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lmer(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod) + (1|site_code), data = traits_sub)
Anova(n_pred_lmer)
summary(n_pred_lmer)
?crPlots
??crPlots
library(car)
## make a plot or two
crPlots(n_pred_lmer)
?crPlots
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lmer(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod) + (1|site_code), data = traits_sub)
## make a plot or two
crPlots(n_pred_lmer)
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lm(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod), data = traits_sub)
## make a plot or two
crPlots(n_pred_lmer)
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lm(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod) + (1|site_code), data = traits_sub)
## compare modeled and observed N
### first remove very high lma (>1000 g m-2)
n_pred_lmer = lmer(log(narea) ~ log(n_rubisco_mod) + log(n_structure_mod) + (1|site_code), data = traits_sub)
## make a plot or two
crPlots(n_pred_lmer)
install.packages("devtools")
devtools::install_github("hohenstein/remef")
?remef
remef
devtools::install_github("hohenstein/remef")
library(remef)
?remef
## make a plot or two
remef(n_pred_lmer)
## make a plot or two
rub_partial = remef(n_pred_lmer)
## make a plot or two
rub_partial = remef(n_pred_lmer, fix = 'log(n_structure_mod)')
## make a plot or two
rub_partial = remef(n_pred_lmer, fix = 'log(n_structure_mod)', ran = '(1|site_code)')
## make a plot or two
rub_partial = remef(n_pred_lmer, fix = 'log(n_structure_mod)', ran = 'all')
plot(log(traits_sub$narea) ~ rub_partial)
rub_partial
log(traits_sub$n_rubisco_mod)
plot(rub_partial ~ log(traits_sub$n_rubisco_mod))
str_partial = remef(n_pred_lmer, fix = 'log(n_rubisco_mod)', ran = 'all')
plot(str_partial ~ log(traits_sub$n_rubisco_mod))
plot(str_partial ~ log(traits_sub$n_structure_mod))
